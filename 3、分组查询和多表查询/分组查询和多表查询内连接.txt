-- Cat00011cat
-- thecat.top

-- 设置字符集

-- 专业表
CREATE TABLE speciality(
	specialityno CHAR(6) NOT NULL PRIMARY KEY COMMENT '专业代码',
	specialityname CHAR(16) NULL COMMENT '专业名称'
);

-- 学生表
CREATE TABLE student(
	studentno CHAR(6) NOT NULL PRIMARY KEY COMMENT '学号',
	sname CHAR(8) NOT NULL COMMENT '姓名',
	ssex  CHAR(2) NOT NULL DEFAULT '男' COMMENT '性别',
	sbirthday DATE NOT NULL COMMENT '出生日期',
	tc TINYINT NULL COMMENT '总学分',
	specialityno CHAR(6) NOT NULL COMMENT '专业代码'
);

-- 课程表
CREATE TABLE course(
	courseno CHAR(4) NOT NULL PRIMARY KEY COMMENT '课程号',
	cname CHAR(16) NOT NULL COMMENT '课程名',
	credit TINYINT NULL COMMENT '学分'
);

-- 教师表
CREATE TABLE teacher(
	teacher CHAR(6) NOT NULL PRIMARY KEY COMMENT '教师编号',
	tname CHAR(8) NOT NULL COMMENT '姓名',
	tsex CHAR(2) NOT NULL DEFAULT '男' COMMENT '性别',
	tbirthday DATE NOT NULL COMMENT '出生日期',
	title CHAR(12) NULL COMMENT '职称',
	school CHAR(12) NULL COMMENT '学院'
);

-- 成绩表
CREATE TABLE score(
-- 建立外键约束   说明不能村内放到 外键约束之后。
	studentno CHAR(6) NOT NULL COMMENT '学号' REFERENCES student(studentno),
	courseno CHAR(4) NOT NULL COMMENT '课程号' REFERENCES course(courseno),
	grade TINYINT NULL COMMENT '成绩',
-- 	对成绩添加自定义约束
	CHECK (grade >= 0 AND grade <= 100),
-- 	联合主键
	PRIMARY KEY(studentno, courseno)
);

-- 讲课表
CREATE TABLE lecture(
	teacherno CHAR(6) NOT NULL COMMENT '教师编号' REFERENCES teacher(teacherno),
	courseno CHAR(4) NOT NULL COMMENT '课程号' REFERENCES course(courseno),
	location CHAR(10) NULL COMMENT '上课地点',
	PRIMARY KEY(teacherno, courseno)
);




-- 插入数据样本
-- INSERT INTO 被插入表 VALUES(值,值,值...);
INSERT INTO speciality VALUES('080701','电子信息工程');
INSERT INTO speciality VALUES('080702','电子科学与技术');
INSERT INTO speciality VALUES('080703','通信工程');
INSERT INTO speciality VALUES('080901','计算机科学与技术');
INSERT INTO speciality VALUES('080902','软件工程');
INSERT INTO speciality VALUES('080903','网络工程');

INSERT INTO student VALUES('193001','梁俊松','男','1992-12-05','52','080903');
INSERT INTO student VALUES('193002','周玲','女','1998-04-17','50','080903');
INSERT INTO student VALUES('193003','夏玉坊','女','1999-06-25','52','080903');
INSERT INTO student VALUES('198001','康文卓','男','1998-10-14','50','080703');
INSERT INTO student VALUES('198002','张小翠','女','1998-09-21','48','080703');
INSERT INTO student VALUES('198004','洪啵','男','1999-11-08','52','080703');

INSERT INTO course VALUES('1004','数据库系统',4);
INSERT INTO course VALUES('1009','软件工程',3);
INSERT INTO course VALUES('1201','英语',4);
INSERT INTO course VALUES('4008','通信原理',4);
INSERT INTO course VALUES('8001','高等数学',4);

INSERT INTO score VALUES('193001','1004',93);
INSERT INTO score VALUES('193002','1004',86);
INSERT INTO score VALUES('193003','1004',94);
INSERT INTO score VALUES('193001','1201',93);
INSERT INTO score VALUES('193002','1201',85);
INSERT INTO score VALUES('193003','1201',93);
INSERT INTO score VALUES('198001','1201',91);
INSERT INTO score VALUES('198002','1201',NULL);
INSERT INTO score VALUES('198004','1201',92);
INSERT INTO score VALUES('198001','4008',92);
INSERT INTO score VALUES('198002','4008',79);
INSERT INTO score VALUES('198004','4008',87);
INSERT INTO score VALUES('193001','8001',91);
INSERT INTO score VALUES('193002','8001',89);
INSERT INTO score VALUES('193003','8001',87);
INSERT INTO score VALUES('198001','8001',91);
INSERT INTO score VALUES('198002','8001',77);
INSERT INTO score VALUES('198004','8001',95);

INSERT INTO teacher VALUES('100004','郭逸超','男','1975-07-24','教授','计算机学院');
INSERT INTO teacher VALUES('100021','任敏','女','1979-10-05','教授','计算机学院');
INSERT INTO teacher VALUES('800023','杨静','女','1983-03-12','副教授','外国语学院');
INSERT INTO teacher VALUES('120037','周章群','女','1988-09-21','僵尸','通信学院');
INSERT INTO teacher VALUES('400012','黄玉杰','男','1985-12-18','副教授','数学学院');

INSERT INTO lecture  VALUES('100004','1004','5-314');
INSERT INTO lecture  VALUES('120037','1201','4-317');
INSERT INTO lecture  VALUES('400012','4008','1-208');
INSERT INTO lecture  VALUES('800023','8001','6-105');

-- 增删改查操作
-- 查看数据库
SHOW DATABASES;
-- 选择数据库
USE teaching;
-- 列出所有表
SHOW TABLES;
-- 查看表
SELECT * FROM course;
SELECT * FROM lecture;
SELECT * FROM score;
SELECT COUNT(*) AS 总数 FROM score;
SELECT * FROM speciality;
SELECT * FROM student;
SELECT * FROM teacher;

-- 插入数据

-- =====================================查询数据============================================
-- =====================================单表查询基础练习
-- 查询所有男同学的基本信息
SELECT * FROM student
WHERE ssex="男";
-- 查出所有总学分大于50的同学的学号，姓名，总学分。
SELECT studentno,sname,tc FROM student 
WHERE tc>50;
-- 查出199年出生的女同学的基本信息
SELECT * FROM student
WHERE sbirthday LIKE "199%" AND ssex="女";
-- 查出学号为193001的同学的所有成绩
SELECT * FROM score
WHERE studentno="193001";
-- 查出课程号为1004或4008的所有成绩信息。  IN 用于指定范围 相当于或or
SELECT * FROM score
WHERE courseno IN(1004,4008);
-- 查出所有大于90分的学号，课程号及成绩。
SELECT studentno,courseno,grade FROM score
WHERE grade>90;
-- 查出所有80分段的成绩信息.	BETWEEN 关键字 介于 xxx区间（指定范围）。
SELECT * FROM score
WHERE grade BETWEEN 80 AND 89;
-- 查出所有男教授的基本信息
SELECT * FROM teacher
WHERE tsex="男" AND title="教授"; 
-- 查出所有计算机学院的老师的基本信息
SELECT * FROM teacher 
WHERE school="计算机学院";

-- ============================================== 分组排序练习
-- GROUP BY 字句和 HAVING 字句(先分组 咱筛选满足条件的数据.)
-- 执行设置 sqlmode=onlyfull_groupby  兼容性 否则报错1055
SET sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
-- 按照专业显示所有的学生信息
SELECT * FROM student
GROUP BY specialityno;
-- 统计每个专业的人数
SELECT specialityno AS "专业带吗",COUNT(*) AS '人数' 
FROM student 
GROUP BY specialityno;
-- 统计学生表中男生和女生的人数
SELECT ssex AS 性别, COUNT(*) AS 人数
FROM student
GROUP BY ssex;
-- 计算显示每位同学的最高分最低分平均分
SELECT studentno AS	学号, MAX(grade) AS 最高分, MIN(grade) AS 最低分, AVG(grade) AS 平均分
FROM score
GROUP BY studentno
-- 统计每种职称的人数
SELECT title AS 职称, COUNT(*) AS 人数
FROM teacher
GROUP BY title;
-- 分学院统计每个学院的教师人数
SELECT school AS 学院, COUNT(*) AS 人数
FROM teacher
GROUP BY school;
-- 按照总学分对学生表排序
SELECT * FROM student
ORDER BY tc DESC;
-- 按照出生日期的降序对所哟有的教授进行排序。
SELECT * FROM teacher
WHERE title='教授'
ORDER BY tbirthday DESC

-- ========================================	多表查询 内连接查询
-- ===================(首先分析出涉及到几张表,在进行联合操作,两张表必须有相同的字段)
-- 查出所有通信工程的男生的基本信息。
SELECT student.*,speciality.*
FROM student,speciality
WHERE student.specialityno=speciality.specialityno		-- 等值连接
AND ssex = '男'
AND	specialityname='通信工程';
-- 查出所有通信工程总学分超过50的同学的基本信息。 内连接(INNER JOIN 或 WHERE)
SELECT student.*,speciality.*
FROM student,speciality
WHERE student.specialityno=speciality.specialityno		-- 等值连接
AND specialityname = '通信工程'
AND tc>50;
-- 查出所有1999年出生的男生的基本信息。NATURAL JOIN  自然连接
SELECT * 
FROM student NATURAL JOIN teacher
-- 查出数据库系统这门课程的最高分平均分。

-- 查出通信工程专业英语课程的最高分和最低分。

-- 查出选修了通信原理课程的学生的学号，专业和成绩。

-- 查出高等数学成绩的前三名,显示学号,成绩,专业,成绩.

-- 查出上了黄玉杰老师的课程的所有同学的学号,课程名.

-- 查出所有职称为教授的老师上的课程的课程名及选课学生的学号,姓名,专业,成绩.

-- 查出所有网络工程女生的基本信息.


-- 修改数据
ALTER

-- 更新数据
UPDATE








